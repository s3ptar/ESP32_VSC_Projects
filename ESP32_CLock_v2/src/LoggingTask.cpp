/***********************************************************************
*! \file:                   main.cpp
*  \projekt:                Ring Clock logging handler
*  \created on:             2024 05 31
*  \author:                 R. Gr√§ber
*  \version:                0
*  \history:                -
*  \brief
***********************************************************************/


/***********************************************************************
* Includes
***********************************************************************/
#include "LoggingTask.h"
#include "esp_log.h"
#include <stdlib.h>
#include <Arduino.h>
/***********************************************************************
* Informations
***********************************************************************/
//https://docs.espressif.com/projects/esp-idf/en/stable/esp32/api-reference/system/log.html
/***********************************************************************
* Declarations
***********************************************************************/



/***********************************************************************
* Constant
***********************************************************************/


/***********************************************************************
* Global Variable
***********************************************************************/


/***********************************************************************
* local Variable
***********************************************************************/


/***********************************************************************
* Constant
***********************************************************************/

/***********************************************************************
* Local Funtions
***********************************************************************/






/***********************************************************************
*! \fn          void setup_logging(esp_log_level_t log_level)
*  \brief       set the logging level
*  \param       uint8_t log_level
*  \exception   none
*  \return      none
***********************************************************************/
void setup_logging(esp_log_level_t log_level){
    Serial.println("Start Logging" + log_level);
    esp_log_level_set("*", log_level);
    Serial.println("LogLVL = " + esp_log_level_get("WiFi"));
}

/***********************************************************************
*! \fn          void setup_logging(uint8_t log_level)
*  \brief       set the logging level
*  \param       uint8_t log_level
*  \exception   none
*  \return      none
***********************************************************************/
void write_to_log(uint8_t log_level){
    esp_log_level_set("*", ESP_LOG_ERROR);
}